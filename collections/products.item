{.section item}

<div id="productWrapper" class="product ProductItem {@|item-classes}" data-item-id="{id}">

  <div class="ProductItem-nav"><a href="{collection.fullUrl}"><span class="back-arrow">&larr;</span> Back to {collection.title}</a></div>

  <div class="ProductItem-summary clear">

    <section class="ProductItem-details ProductItem-details--mobile">
      <h1 class="ProductItem-details-title" data-content-field="title">{title}</h1>
    </section>

    <div class="ProductItem-gallery">
      <div class="intrinsic">
      <div class="wrapper">
      <div class="ProductItem-gallery-active" id="activeGalleryItem">
      {.section items.0}
        {.image?}
          <img data-load="true" {@|image-meta} />
        {.end}
      {.end}
      </div>
      <div class="ProductItem-gallery-slides">
        {.repeated section items}
          {.image?}
            <div class="ProductItem-gallery-slides-item"><img data-load="true" {@|image-meta} /><div class=""></div></div>
          {.end}
          {.video?}
            {@|video}
          {.end}
        {.end}
      </div>
      </div></div>
      <div class="ProductItem-gallery-thumbnails">
        {.repeated section items}<div class="slide content-fill"><img {@|image-meta} /></div>{.end}
      </div>
    </div>


    <div class="ProductItem-details">
      {@|product-status}

      <h1 class="ProductItem-details-title" data-content-field="title">{title}</h1>

      {@|product-price}

      {.excerpt?}<div class="ProductItem-details-excerpt" data-content-field="excerpt">{excerpt}</div>{.end}

      <div class="customer-journeys">
        {@|product-checkout}
        <div class="additional-options">
          <squarespace:block-field id="customerJourneyBlock-{item.title}" class="customer-journey-block sqs-alternate-block-style-container" columns="12" label="Customer Journey Blocks" />
          <div class="ProductItem-details-share">{@|social-button-inline}</div>
        </div>
      </div>
    </div>
  </div>

    {.section body}
      <div class="product-description">
        {@}
      </div>
    {.end}

</div>

<script>

fireCallbackOnSQSLoaded()

function fireCallbackOnSQSLoaded() {
  var bodyLoaded = window.Squarespace.afterBodyLoad
  window.Squarespace.afterBodyLoad = function () {
  	var result = bodyLoaded.apply(this, arguments);
    loadHandler();
    return result;
  }
}

function loadHandler() {
  var variantSelectors = document.querySelectorAll('.variant-select-wrapper select')
  createVariantPriceContainer()
  variantSelectors.forEach(function(selector) {
    selector.addEventListener('change', resetOrUpdatePrice)
  })
  var galleryItems = document.querySelectorAll('.ProductItem-gallery-slides-item')

  galleryItems.forEach(function(item) {
    item.addEventListener('click', function() { setActiveItem(item) })
  })
}

function resetOrUpdatePrice(e) {
  if (isVariantSelected()) {
    var price = getPrice()
    if (price) {
      return setPrice(price, e.target)
    }
  } else {
    resetPrice()
  }
}

function closest(el, selectors) {
  var retval = null;
  var originalEl = el
  for (i = 0; i < selectors.length; i++) {
    while (el) {
      if (el.matches(selectors[i])) {
        retval = el;
        break
      }
      el = el.parentElement;
    }
    el = originalEl
  }
  return retval;
}

function resetPrice() {
  document.querySelector('.product-price.product-price-variant').style.display = 'none'
  document.querySelector('.product-price.product-price-original').style.display = 'block'
}

function isVariantSelected() {
 return !JSON.parse(document.querySelector('.product-variants').getAttribute('data-unselected-options')).length
}

function getPrice() {
  var selectedVariant = JSON.parse(document.querySelector('.product-variants').getAttribute('data-selected-variant'))
  if (selectedVariant) {
    var price = selectedVariant.onSale ? selectedVariant.salePriceMoney.value : selectedVariant.priceMoney.value
    return price
  }

  return null
}

function closest(el, selector, stopSelector) {
  var retval = null;
  while (el) {
    if (el.matches(selector)) {
      retval = el;
      break
    } else if (stopSelector && el.matches(stopSelector)) {
      break
    }
    el = el.parentElement;
  }
  return retval;
}

function createVariantPriceContainer() {
  var priceContainer = document.querySelector('.product-price')
  var newContainer = priceContainer.cloneNode(true)
  var firstChild = newContainer.childNodes[0]
  if (!newContainer.classList.contains('product-price-variant')) {
    newContainer.classList.add('product-price-variant')
  }
  if (!priceContainer.classList.contains('product-price-original')) {
    priceContainer.classList.add('product-price-original')
  }

  if (firstChild.nodeType === 3) {
    newContainer.removeChild(firstChild)
  }
  newContainer.style.display = 'none'
  priceContainer.parentNode.insertBefore(newContainer, priceContainer.nextElementSibling)
}

function setPrice(price, element) {
  var princeChanged = closest(element, ['.product-block', '#productWrapper'])
  var variantPriceContainer = princeChanged.querySelector('.product-price-variant .sqs-money-native')
  variantPriceContainer.textContent = price
  setTimeout(function() {
    princeChanged.querySelector('.product-price.product-price-variant').style.display = 'block'
    princeChanged.querySelector('.product-price.product-price-original').style.display = 'none'
  })
}

function setActiveItem(item) {
  var activeItem = document.getElementById('activeGalleryItem')
  var newItem = item.childNodes[0].cloneNode(true)
  activeItem.replaceChild(newItem, activeItem.childNodes[0])
  activeItem.removeChild(activeItem.childNodes[1])
}

</script>

{.end}
